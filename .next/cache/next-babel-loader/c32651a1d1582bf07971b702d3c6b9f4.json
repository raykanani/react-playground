{"ast":null,"code":"var _jsxFileName = \"/Users/raykanani/Documents/GitHub/react-playground/pages/posts/[id].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/layout';\nimport Date from '../../components/date';\nimport Head from 'next/head';\nimport ReactPlayer from 'react-player';\nimport utilStyles from '../../styles/utils.module.css';\nexport var __N_SSG = true;\nexport default function Post(_ref) {\n  var postData = _ref.postData;\n  return __jsx(Layout, {\n    prevQuestion: postData.prevQuestion,\n    nextQuestion: postData.nextQuestion,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(Head, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"title\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, postData.title)), __jsx(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: utilStyles.questionHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: utilStyles.headingXl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, postData.title, __jsx(\"span\", {\n    className: \"\".concat(utilStyles.lightText, \" \").concat(utilStyles.date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, __jsx(Date, {\n    dateString: postData.date,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    className: utilStyles.videoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, postData.videoUrl && __jsx(ReactPlayer, {\n    url: postData.videoUrl,\n    height: 500,\n    width: 300,\n    playing: true,\n    config: {\n      youtube: {\n        playerVars: {\n          modestbranding: 1\n        }\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    dangerouslySetInnerHTML: {\n      __html: postData.contentHtml\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/raykanani/Documents/GitHub/react-playground/pages/posts/[id].js"],"names":["Layout","Date","Head","ReactPlayer","utilStyles","Post","postData","prevQuestion","nextQuestion","title","questionHeader","headingXl","lightText","date","videoContainer","videoUrl","youtube","playerVars","modestbranding","__html","contentHtml"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,yBAAnB;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,WAAP,MAAwB,cAAxB;AAIA,OAAOC,UAAP,MAAuB,+BAAvB;;AAGA,eAAe,SAASC,IAAT,OAA4B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACzC,SACE,MAAC,MAAD;AAAQ,IAAA,YAAY,EAAEA,QAAQ,CAACC,YAA/B;AAA6C,IAAA,YAAY,EAAED,QAAQ,CAACE,YAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,QAAQ,CAACG,KADZ,CADF,CADF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAEL,UAAU,CAACM,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAEN,UAAU,CAACO,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,QAAQ,CAACG,KADZ,EAEE;AAAM,IAAA,SAAS,YAAKL,UAAU,CAACQ,SAAhB,cAA6BR,UAAU,CAACS,IAAxC,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,UAAU,EAAEP,QAAQ,CAACO,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CADF,CADA,EASA;AAAK,IAAA,SAAS,EAAET,UAAU,CAACU,cAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKR,QAAQ,CAACS,QAAT,IACC,MAAC,WAAD;AACE,IAAA,GAAG,EAAET,QAAQ,CAACS,QADhB;AAEE,IAAA,MAAM,EAAE,GAFV;AAGE,IAAA,KAAK,EAAE,GAHT;AAIE,IAAA,OAAO,MAJT;AAKE,IAAA,MAAM,EAAE;AACNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,UAAU,EAAE;AAAEC,UAAAA,cAAc,EAAE;AAAlB;AADL;AADH,KALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFN,CATA,EAwBE;AAAK,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAEb,QAAQ,CAACc;AAAnB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxBF,CANF,CADF;AAmCD","sourcesContent":["import Layout from '../../components/layout'\nimport { getAllPostIds, getPostData } from '../../lib/posts'\nimport Date from '../../components/date'\nimport Head from 'next/head'\nimport ReactPlayer from 'react-player'\nimport { getSortedPostsData } from '../lib/posts'\n\n\nimport utilStyles from '../../styles/utils.module.css'\n\n\nexport default function Post({ postData }) {\n  return (\n    <Layout prevQuestion={postData.prevQuestion} nextQuestion={postData.nextQuestion}>\n      <Head>\n        <title>\n          {postData.title}\n        </title>\n      </Head>\n      <article>\n      <div className={utilStyles.questionHeader}>\n        <h1 className={utilStyles.headingXl}>\n          {postData.title}\n          <span className={`${utilStyles.lightText} ${utilStyles.date}`}>\n            <Date dateString={postData.date} />\n          </span>\n        </h1>\n      </div>\n      <div className={utilStyles.videoContainer}>\n          {postData.videoUrl && \n            <ReactPlayer \n              url={postData.videoUrl}\n              height={500}\n              width={300}\n              playing\n              config={{\n                youtube: {\n                  playerVars: { modestbranding: 1 }\n                }\n              }}\n            />\n          }\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: postData.contentHtml }} />\n    </article>\n    </Layout>\n  )\n}\n\nexport async function getStaticPaths() {\n  const paths = getAllPostIds()\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport async function getStaticProps( {params} ) {\n  const allPostsData = getSortedPostsData()\n  const postData = await getPostData(params.id)\n  let postCache = {};\n  let isCurrentPost = false;\n  let nextQuestion, prevQuestion;\n  allPostsData.map(({ id, date, title }) => {\n    if (isCurrentPost) {\n      nextQuestion = {\n        id,\n        title,\n      }\n      return;\n    }\n    if (id === params.id)  {\n      isCurrentPost = true;\n      prevQuestion = postCache\n    }\n    postCache = {\n      id,\n      title\n    }\n })\n  return {\n    props: {\n      postData,\n      nextQuestion,\n      prevQuestion\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}