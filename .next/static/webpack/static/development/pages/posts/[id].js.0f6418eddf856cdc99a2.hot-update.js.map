{"version":3,"file":"static/webpack/static/development/pages/posts/[id].js.0f6418eddf856cdc99a2.hot-update.js","sources":["webpack:///./pages/posts/.js"],"sourcesContent":["import Layout from '../../components/layout'\nimport { getAllPostIds, getPostData } from '../../lib/posts'\nimport Date from '../../components/date'\nimport Head from 'next/head'\nimport ReactPlayer from 'react-player'\nimport { getSortedPostsData } from '../lib/posts'\n\n\nimport utilStyles from '../../styles/utils.module.css'\n\n\nexport default function Post({ postData }) {\n  return (\n    <Layout prevQuestion={postData.prevQuestion} nextQuestion={postData.nextQuestion}>\n      <Head>\n        <title>\n          {postData.title}\n        </title>\n      </Head>\n      <article>\n      <div className={utilStyles.questionHeader}>\n        <h1 className={utilStyles.headingXl}>\n          {postData.title}\n          <span className={`${utilStyles.lightText} ${utilStyles.date}`}>\n            <Date dateString={postData.date} />\n          </span>\n        </h1>\n      </div>\n      <div className={utilStyles.videoContainer}>\n          {postData.videoUrl && \n            <ReactPlayer \n              url={postData.videoUrl}\n              height={500}\n              width={300}\n              playing\n              config={{\n                youtube: {\n                  playerVars: { modestbranding: 1 }\n                }\n              }}\n            />\n          }\n        </div>\n        <div dangerouslySetInnerHTML={{ __html: postData.contentHtml }} />\n    </article>\n    </Layout>\n  )\n}\n\nexport async function getStaticPaths() {\n  const paths = getAllPostIds()\n  return {\n    paths,\n    fallback: false\n  }\n}\n\nexport async function getStaticProps( {params} ) {\n  const allPostsData = getSortedPostsData()\n  const postData = await getPostData(params.id)\n  let postCache = {};\n  let isCurrentPost = false;\n  let nextQuestion, prevQuestion;\n  allPostsData.map(({ id, date, title }) => {\n    if (isCurrentPost) {\n      nextQuestion = {\n        id,\n        title,\n      }\n      return;\n    }\n    if (id === params.id)  {\n      isCurrentPost = true;\n      prevQuestion = postCache\n    }\n    postCache = {\n      id,\n      title\n    }\n })\n  return {\n    props: {\n      postData,\n      nextQuestion,\n      prevQuestion\n    }\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAIA;;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AADA;AADA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}